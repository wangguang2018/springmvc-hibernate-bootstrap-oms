<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd"
       default-lazy-init="false">


    <context:annotation-config />

	<context:component-scan base-package="com.wangguang.services"/>
    <context:component-scan base-package="com.iguangtech.api.service"/>
	<context:component-scan base-package="com.wangguang.model.repositories" />
	<context:component-scan base-package="com.iguangtech.api.common" />



	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter" />
		<property name="packagesToScan" value="com.wangguang.model" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.cache.region.factory_class">net.sf.ehcache.hibernate.EhCacheRegionFactory</prop>
				<prop key="hibernate.show_sql">false</prop>
				<!--<prop key="net.sf.ehcache.configurationResourceName">cache/ehcache-hibernate-local.xml</prop>
				<prop key="hibernate.ejb.naming_strategy">com.dm.model.hibernate.CustomizeNamingStrategy</prop>-->
				<!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
			</props>
		</property>
	</bean>

	<!--<bean id="hibernateJpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform">
			<bean factory-method="getDialect"
				class="com.dm.model.hibernate.Hibernates">
				<constructor-arg ref="dataSource" />
			</bean>
		</property>
	</bean>-->

	<bean id="hibernateJpaVendorAdapter"
		  class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="database" value="MYSQL"/>
	</bean>

	<!--<bean id="exchangeLimiter" class="com.dm.api.common.ratelimiter.LuaRateLimiter">
		<constructor-arg index="0">
			<value>${redis.host}</value>
		</constructor-arg>
		<constructor-arg index="1">
			<value>${redis.port}</value>
		</constructor-arg>
		<constructor-arg index="2">
			<value>${redis.password}</value>
		</constructor-arg>
		<constructor-arg index="3">
			<value>${rateLimiter.exchange.capacity}</value>
		</constructor-arg>
		<constructor-arg index="4">
			<value>${rateLimiter.exchange.intervalInMills}</value>
		</constructor-arg>
		<constructor-arg index="5">
			<value>${rateLimiter.exchange.maxBurstTime}</value>
		</constructor-arg>
		<constructor-arg index="6">
			<value>${rateLimiter.exchange.luaScriptPath}</value>
		</constructor-arg>
	</bean>-->


	<jpa:repositories base-package="com.wangguang.model.repositories" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

    <!--<task:annotation-driven executor="taskExecutor" scheduler="myScheduler" />
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2" />
        <property name="keepAliveSeconds" value="300" />
        <property name="maxPoolSize" value="8" />
        <property name="queueCapacity" value="100" />
    </bean>-->

   <!-- <task:scheduler id="myScheduler" pool-size="10" />-->

	<aop:aspectj-autoproxy proxy-target-class="true" />

	<bean id="validator"
		class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />


	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		  destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/frame_oms" />
		<property name="username" value="root" />
		<property name="password" value="123456" />
		<property name="maxActive" value="50" />
		<property name="maxIdle" value="10" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
		<property name="validationInterval" value="3000" />
		<property name="defaultAutoCommit" value="false" />
		<property name="timeBetweenEvictionRunsMillis" value="900000" />
		<property name="minEvictableIdleTimeMillis" value="1800000" />
	</bean>




</beans>