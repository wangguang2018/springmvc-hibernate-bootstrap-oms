<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:cache='http://www.springframework.org/schema/cache' xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
  http://www.springframework.org/schema/beans/spring-beans.xsd


   http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
          p:connectionFactory-ref="jedisConnectionFactory" />

    <!-- Jedis ConnectionFactory -->
    <bean id='jedisConnectionFactory'
          class='org.springframework.data.redis.connection.jedis.JedisConnectionFactory'
          p:hostName='${redis.host}' p:port='${redis.port}' p:password='${redis.password}' p:usePool='true'>
        <property name="poolConfig" ref="jedisPoolConfig"></property>
    </bean>


    <!-- redis template definition -->
    <bean id='redisTemplate' class='org.springframework.data.redis.core.RedisTemplate'>
        <property name="enableTransactionSupport" value="false"/>
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="hashValueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
    </bean>

    <!-- declare Redis Cache Manager -->
    <bean id='cacheManager' class='org.springframework.data.redis.cache.RedisCacheManager'>
        <constructor-arg ref="redisTemplate"/>
        <property name="expires">
            <map>
                <entry key="goodsListCache" value="30"/>
                <entry key="orderListCache" value="120"/>
            </map>
        </property>
    </bean>
    <!-- turn on declarative caching -->
    <cache:annotation-driven cache-manager="cacheManager"/>


</beans>