group 'com.wangguang'
version '1.0-SNAPSHOT'

def env = System.getProperty("profile")
System.out.print("-----------------------------------------------------------env:"+env)

ext {
    hibernateVersion = "3.6.10.Final"
    springVersion = "3.2.11.RELEASE"
    slf4jVersion = "1.7.6"
    tomcatjdbcVersion = "7.0.54"

}

apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = 1.8





repositories {
    maven {url 'http://maven.ydd100.cn/repository/maven-public/'}
    maven{ url 'http://maven.aliyun.com/nexus/content/groups/public'}
    mavenCentral()
}

dependencies {
    compile project(':modules:service')
    compile project(':modules:core')
    compile project(':modules:model')
    compile project(':dm-dto')

    compile fileTree(include: '*.jar', dir: 'src/libs')
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.springframework', name: 'spring-test', version: '3.2.11.RELEASE'

    /*spring核心包*/
    compile("org.springframework:spring-core:${springVersion}")
    compile("org.springframework:spring-web:${springVersion}")
    compile("org.springframework:spring-orm:${springVersion}")
    compile("org.springframework:spring-tx:${springVersion}")
    compile("org.springframework:spring-jdbc:${springVersion}")
    compile("org.springframework:spring-webmvc:${springVersion}")
    compile("org.springframework:spring-aop:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")

    compile("org.springframework:spring-beans:${springVersion}")
    compile("org.springframework:spring-expression:${springVersion}")
    compile "org.springframework.data:spring-data-commons:1.9.0.RELEASE"

    compile("org.springframework:spring-test:${springVersion}")
    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: '1.6.1.RELEASE'

    compile "javax.servlet:javax.servlet-api:3.1.0"
    compile "javax.servlet:jstl:1.2"
    compile "taglibs:standard:1.1.2"

    compile("org.apache.shiro:shiro-ehcache:1.2.3"){
        exclude module: "ehcache-core"
    }
    compile "org.apache.shiro:shiro-spring:1.2.3"

    compile "commons-fileupload:commons-fileupload:1.3.1"

    compile "com.fasterxml.jackson.core:jackson-core:2.4.3"
    compile "com.fasterxml.jackson.core:jackson-databind:2.4.3"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.4.3"

    compile("org.apache.tomcat:tomcat-jdbc:${tomcatjdbcVersion}")
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.17'



    /*compile("org.springframework:spring-beans:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-expression:${springVersion}")
    compile("org.springframework:spring-oxm:${springVersion}") */


    //hibernate
    compile("org.hibernate:hibernate-validator:5.2.1.Final")
    compile("org.hibernate:hibernate-core:${hibernateVersion}")
    compile("org.hibernate:hibernate-ehcache:${hibernateVersion}")
    compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    /*compile("org.hibernate:hibernate-c3p0:${hibernateVersion}")*/

    compile "org.apache.commons:commons-lang3:3.3.2"
    compile group: 'com.google.guava', name: 'guava', version: '23.6-jre'
    compile "commons-collections:commons-collections:3.2.1"

    /*导入Mysql数据库链接jar包*/
    compile("mysql:mysql-connector-java:5.1.9")

    compile "org.slf4j:slf4j-api:${slf4jVersion}"


    compile ('com.ydd:gt-common:1.0.8') {
        transitive = false
    }
    compile 'com.ydd:gt-machine-api:1.0.8'
    compile 'com.alibaba:fastjson:1.2.10'





    /*导入java ee jar 包*//*
    compile("javax:javaee-api:7.0")



    *//*导入dbcp的jar包，用来在applicationContext.xml中配置数据库*//*
    compile("commons-dbcp:commons-dbcp:1.2.2")


    *//*日志文件管理包*//*
    *//*log start*//*
    compile("log4j:log4j:1.2.17")

    *//*格式化对象，方便输出日志*//*
    compile("com.alibaba:fastjson:1.1.41")
    compile("org.slf4j:slf4j-api:1.7.7")
    compile("org.slf4j:slf4j-log4j12:1.7.7")
    *//*log end*//*

    "*/











}


/*sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources/", "src/main/profile/$env"]
        }
    }
}*/

processResources {
    from(sourceSets.main.resources.srcDirs)  {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: loadGroovy())
    }
}

